;; Reporters about bus properties.

;; Report the capacity of a bus
to-report get-capacity
  if bus_type = 1 [ report 12 ]
  if bus_type = 2 [ report 60 ]
  if bus_type = 3 [ report 150 ]
end  

;; Report which route this bus has to take
to-report get-route
  let route_id bus_id mod 5
  if route_id = 4 [ report [ 16 11 1 19 23 14 0 15 18 ] ]
  if route_id = 3 [ report [ 16 5 17 7 13 22 12 ] ]
  if route_id = 2 [ report [ 2 8 9 3 4 10 13 23 19 ] ]
  if route_id = 1 [ report [ 3 20 21 22 12 ] ]
  if route_id = 0 [ report [ 3 9 8 6 ] ]
end

to-report get-shortest-path-to [ bus_stop_id ]
  report map [ [who] of ? ] nw:turtles-on-path-to turtle bus_stop_id
end

;; Report the next stop on the route
to-report next-stop-on-route
  ;TODO: breaks when elements occurs multiple times in a list (position always returns the position of the first)
  report item (position current_stop fixed_route + 1) fixed_route
end

;; report a list of all postions at witch an element occurs
to-report multiple-position [ element a_list ]
  let result (list)
  let counter 0
  
  foreach a_list [
    if element = ? [ 
      set result lput counter result
    ]
    set counter (counter + 1)
  ]
  
  report result
end